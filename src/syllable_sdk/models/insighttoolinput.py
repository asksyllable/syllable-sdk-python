"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from syllable_sdk.types import BaseModel
from typing import Any, Dict, List, Union
from typing_extensions import TypeAliasType, TypedDict


class InsightToolInputToolArgumentsTypedDict(TypedDict):
    pass


class InsightToolInputToolArguments(BaseModel):
    pass


InsightToolInputToolArgumentsUnionTypedDict = TypeAliasType(
    "InsightToolInputToolArgumentsUnionTypedDict",
    Union[InsightToolInputToolArgumentsTypedDict, str, int, float, List[Any]],
)


InsightToolInputToolArgumentsUnion = TypeAliasType(
    "InsightToolInputToolArgumentsUnion",
    Union[InsightToolInputToolArguments, str, int, float, List[Any]],
)


class InsightToolInputTypedDict(TypedDict):
    r"""Request model to create/update an insight tool."""

    name: str
    r"""Human readable name of insight tool"""
    description: str
    r"""Text description of insight tool"""
    version: int
    r"""Version number of insight tool"""
    tool_arguments: Dict[str, InsightToolInputToolArgumentsUnionTypedDict]
    r"""Arguments for calling the insight tool"""
    insight_tool_definition_id: int
    r"""Internal ID for the definition used by the insight tool"""


class InsightToolInput(BaseModel):
    r"""Request model to create/update an insight tool."""

    name: str
    r"""Human readable name of insight tool"""

    description: str
    r"""Text description of insight tool"""

    version: int
    r"""Version number of insight tool"""

    tool_arguments: Dict[str, InsightToolInputToolArgumentsUnion]
    r"""Arguments for calling the insight tool"""

    insight_tool_definition_id: int
    r"""Internal ID for the definition used by the insight tool"""
